// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys" // Able to use this since DB is run using AWS RDS
}

// Notes:
// String types is limited to 191 characters when using MySQL

model User {
  id          String    @id @default(cuid())
  dateCreated DateTime  @default(now())
  username    String    @unique
  password    String
  firstName   String
  lastName    String
  routines    Routine[]
  sessions    Session[]
  workouts    Workout[]
}

// Routine will be based on a weekly basis, only one will be active at a time
model Routine {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  name        String    @unique
  description String?
  isActive    Boolean   @default(false)
  sessions    Session[]
  user        User      @relation(fields: [userId], references: [id])
  userId      String
}

model Session {
  id          String              @id @default(cuid())
  createdAt   DateTime            @default(now())
  name        String
  description String?
  workouts    Workout[]
  routine     Routine?            @relation(fields: [routineId], references: [id])
  routineId   String?
  days        SessionDaysActive[]
  user        User                @relation(fields: [userId], references: [id])
  userId      String
}

model SessionDaysActive {
  id        String  @id @default(cuid())
  day       String
  session   Session @relation(fields: [sessionId], references: [id])
  sessionId String
}

model Workout {
  id         String   @id @default(cuid())
  reps       Int
  sets       Int
  weight     Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String
  session    Session  @relation(fields: [sessionId], references: [id])
  sessionId  String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
}

model Exercise {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?   @db.VarChar(300)
  workouts    Workout[]
}
